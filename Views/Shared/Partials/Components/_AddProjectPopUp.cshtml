<section id="add-project-modal" class=" modal">
	<div class="card">

		<div class="card-header">
			<h3>Add Project</h3>
			<button data-type="close" class="btn-close" id="close-add-project-modal">
				<i class="fa-solid fa-xmark"></i>
			</button>
		</div>
		<div class="card-body">
			<form asp-controller="Projects" asp-action="AddProject" method="post" enctype="multipart/form-data" novalidate>
				<div class="form-group">
					
					<input name="UserId" class="hide" value="test-user" />

					<div id="upload-trigger" class="image-preview-container">
						<img id="image-preview-project" src="#" class="hide" />
						<div class="circle">
							<i id="image-preview-icon" class="fa-duotone fa-solid fa-camera"></i>
						</div>
					</div>
					<input type="file" id="image-upload" name="ImageFile" accept="image/*" class="hide" />

				</div>


				<div class="form-group">
					<label for="projectName" class="form-label">Project Name</label>
					<input type="text" class="form-control" name="ProjectName" id="projectName" placeholder="Project Name" required />

				</div>

				<div class="form-group">
					<label class="form-label">Client</label>
					<div class="form-select" data-placeholder="Choose a client">
						<button type="button" class="form-select-trigger" id="client-btn">
							<span class="form-select-text">Choose a client</span>
						</button>
						<ul class="form-select-options" id="client-list">
							<li class="form-select-option" data-value="1">Client 1</li>
							<li class="form-select-option" data-value="2">Client 2</li>
						</ul>
						<input type="hidden" name="ClientId" id="selected-client" value="1" />

					</div>

				</div>


				<div class="form-group">
					<label class="form-label">Description</label>
					<textarea class="hide" id="add-project-description" name="Description" rows="4"></textarea>

					<div class="quill-container">
						<div id="add-project-description-wysiwyg-editor" class="wysiwyg-editor"></div>
						<div id="add-project-description-wysiwyg-toolbar" class="wysiwyg-toolbar">
						
							<span class="ql-formats">
								<button class="ql-bold"></button>
								<button class="ql-italic"></button>
								<button class="ql-underline"></button>
							</span>
							<span class="ql-formats">
								<button class="ql-align" value=""></button>
								<button class="ql-align" value="center"></button>
								<button class="ql-align" value="right"></button>
							</span>
							<span class="ql-formats">
								<button class="ql-list" value="bullet"></button>
								<button class="ql-list" value="ordered"></button>
							</span>
							<span class="ql-formats">
								<button class="ql-link"></button>
							</span>

						</div>
					</div>
				</div>




				<div class="form-group">
					<section class="date-column">
						<label for="startDate" class="form-label">Start Date</label>
						<div class="startDateContainer">
							<input type="date" id="startDate" name="StartDate" class="hidden-date-input" data-placeholder="formattedDate" />
						</div>
					</section>
					<section class="date-column">
						<label for="endDate" class="form-label">End Date</label>
						<div class="endDateContainer">
							<input type="date" id="endDate" name="EndDate" class="hidden-date-input" data-placeholder="formattedEndDate" />
						</div>
					</section>
				</div>

				<div class="form-group">
					<label for="budget" class="form-label">Budget</label>
					<input type="number" name="Budget" class="form-control" id="budget" placeholder="$ 0" value="0" />

				</div>

				<button type="submit" class="btn btn-blue">Create</button>
			</form>
		</div>

	</div>
</section>


<script>
	const uploadTrigger = document.getElementById('upload-trigger');
	const fileInput = document.getElementById('image-upload');
	const imagePreview = document.getElementById('image-preview-project');
	const imageContainer = document.querySelector('.circle');
	const imagePreviewIcon = document.getElementById('image-preview-icon')


	uploadTrigger.addEventListener('click', function () {
		console.log('Upload trigger clicked');
		fileInput.click();
	});


	fileInput.addEventListener('change', function (e) {
		const file = e.target.files[0];

		if (file && file.type.startsWith('image/')) {
			const reader = new FileReader();


			reader.onload = function (e) {
				imagePreview.src = e.target.result;
				imagePreview.classList.remove('hide');
				imagePreviewIcon.classList.remove('fa-camera')
				imagePreviewIcon.classList.add('fa-edit');
				imageContainer.classList.add('selected');
			};

			reader.readAsDataURL(file);
		}
	});

		window.onload = function () {
		const today = new Date();
		const formattedDate = today.toISOString().split('T')[0];

		const endDay = new Date();
		endDay.setMonth(endDay.getMonth() + 1);
		const formattedEndDate = endDay.toISOString().split('T')[0];


		document.getElementById('startDate').value = formattedDate;
		document.getElementById('endDate').value = formattedEndDate;
	};


	const addProjectDescriptionTextarea = document.getElementById('add-project-description')
	const addProjectDescriptionQuill = new Quill('#add-project-description-wysiwyg-editor', {
		modules: {
			syntax: true,
			toolbar: '#add-project-description-wysiwyg-toolbar'
		},
		theme: 'snow',
		placeholder: 'Type something'
	});

	addProjectDescriptionQuill.on('text-change', function() {
		addProjectDescriptionTextarea.value = addProjectDescriptionQuill.root.innerHTML
	})



	const closeAddProjectButton = document.getElementById('close-add-project-modal');

		closeAddProjectButton.addEventListener('click', () => {
		addProjectModal.classList.remove("modal-show");
	});



		const clientSelect = document.querySelector('.form-select'); 
	const clientButton = document.querySelector('#client-btn');
	const clientList = document.querySelector('#client-list');
	const selectedClientInput = document.querySelector('#selected-client');
	const clientText = document.querySelector('.form-select-text');

	clientButton.addEventListener('click', () => {
		clientSelect.classList.toggle('open'); 
	});

	clientList.addEventListener('click', (event) => {
		if (event.target.classList.contains('form-select-option')) {
			const clientName = event.target.textContent;
			const clientValue = event.target.getAttribute('data-value');

			clientText.textContent = clientName;
			selectedClientInput.value = clientValue.toString();

			clientSelect.classList.remove('open');
		}
	});

</script>
